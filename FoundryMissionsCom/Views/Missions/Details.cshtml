@using FoundryMissionsCom.Helpers;

@model FoundryMissionsCom.Models.FoundryMissionViewModels.ViewMissionViewModel

@{

    ViewBag.Title = Model.Name;
    var description = Model.Description;
    if (description.Length > 100)
    {
        description = description.Substring(0, 100) + "...";
    }
    var editable = User.IsInRole(ConstantsHelper.AdminRole) || User.Identity.Name.Equals(Model.Author.UserName);
}

@section opengraph{
    <meta property="og:title" content="@Model.Name" />
    <meta property="og:description" content="@description"/>
}

@section scripts{

    @Styles.Render("~/Content/lightbox")
    @Styles.Render("~/Content/missiondetails")
    @Scripts.Render("~/bundles/lightbox")
    @Scripts.Render("~/bundles/missiondetails")
    }


<div class="container content">

    <div class="mission-status">
        @switch(Model.Status)
        {
            case FoundryMissionsCom.Models.FoundryMissionModels.Enums.MissionStatus.InReview:
                <h3>This mission is currently under review by the Admin team</h3>
                break;
            case FoundryMissionsCom.Models.FoundryMissionModels.Enums.MissionStatus.Removed:
                <h3>This mission has been removed by the Admin team</h3>
                break;
            case FoundryMissionsCom.Models.FoundryMissionModels.Enums.MissionStatus.Unpublished:
                <h3>This mission has not been published and is only visible to you</h3>
                break;
        }
        @if (ViewBag.Message != null)
        {
            <h3>@ViewBag.Message</h3>
        }
    </div>

    <article>
        <div class="row">
            <div class="mission-header">
                <div class="col-sm-10">
                    <header>
                        <h1>@Model.Name</h1>
                    </header>
                    <div class="missioninfo">
                        <div>
                            @Html.ActionLink(Model.Author.CrypticTag, "searchresults", "missions", new { Author = Model.Author.CrypticTag }, new { @class = "mission-author" })
                        </div>
                        <div>
                            ST-@Model.CrypticId
                        </div>
                        <div>
                            @Model.Length.DisplayName()
                        </div>
                        @if (editable)
                        {
                            <div>
                                @Html.ActionLink("Edit", "edit", new { link = Model.MissionLink }, new { @class = "btn btn-default details-edit-mission" })
                            </div>
                        }
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="mission-restrictions">
                        <img src="@Url.Content("~/Content/Images/"+Model.FactionImageUrl)" alt="@Model.Faction.ToString()" title="@Model.Faction.ToString()" />
                        @if (@Model.MinimumLevel == 1)
                        {
                            <img src="@Url.Content("~/Content/Images/"+Model.MinimumLevelImageUrl)" alt="Any Level" title="Any Level" />
                        }
                        else
                        {
                            <img src="@Url.Content("~/Content/Images/"+Model.MinimumLevelImageUrl)" alt="Level @Model.MinimumLevel+" title="Level @Model.MinimumLevel+" />
                        }
                    </div>
                </div>                         
            </div>


        </div>
        <div class="row">
            <div class="col-sm-10">
                @if (Model.Images.Count > 0 || Model.Videos.Count > 0)
                {
                    <div class="row mission-images-row">
                        <div class="col-md-12">		
                            <div class="mission-images">
                                @*Youtube first*@
                                @foreach (string video in Model.Videos)
                                {
                                    <figure class="mission-video">
                                        <a href="http://www.youtube.com/watch?v=@video"
                                           type="text/html"
                                           data-youtube="@video"
                                           data-gallery>
                                            <img class="youtube-video" src="http://img.youtube.com/vi/@video/0.jpg"/>
                                            <img class="youtube-play-button" src="@Url.Content("~/Content/Images/YouTubePlayButton.png")"/>
                                        </a>
                                    </figure>
                                }
                                @foreach(string image in Model.Images)
                                { 
                                    <figure class="mission-image">
                                        <a href="@Url.Content(MissionImagesHelper.GetImageLink(image, Model.Id))" data-gallery>
                                            <img src="@Url.Content(MissionImagesHelper.GetThumbnailLink(image, Model.Id))" />
                                        </a>                                    
                                    </figure>
                                }
                            </div>
                        </div>
                    </div>
                }
                <section class="mission-description">
                    <div class="row">
                        <div class="col-md-12 ">
                            <header class=""><h3 class="mission-description-header">Mission Description</h3></header>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div>
                                <p><span style="white-space: pre-line">@Model.Description</span></p>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            @if (Model.Tags.Count > 0)
            {
            <div class="col-sm-2">
                <div class="mission-tags">
                    <div><h4 class="mission-tag-header">Mission Tags</h4></div>
                    <div>
                        @foreach (var tag in Model.Tags)
                        {
                            <figure class="mission-tag-image">
                                <div>
                                    <a href="/missions/searchresults?Tags[0]=@tag.TagName">
                                        <img src="@Url.Content("~/Content/Images/Tags/" + MissionHelper.GetTagImageUrl(tag))" title="@tag.TagName" alt="@tag.TagName" />
                                    </a>
                                </div>
                            </figure>
                        }
                    </div>
                </div>
            </div>
            }
        </div>

    </article>
</div>

<footer>
    <p>Last Updated: @Model.DateLastUpdated.ToShortDateString()</p>
</footer>

	<!-- The Bootstrap Image Gallery lightbox, should be a child element of the document body -->
<div id="blueimp-gallery" class="blueimp-gallery" data-you-tube-click-to-play="false" data-vimeo-click-to-play="false">
    <!-- The container for the modal slides -->
    <div class="slides"></div>
    <!-- Controls for the borderless lightbox -->
    <h3 class="title"></h3>
    <a class="prev">‹</a>
    <a class="next">›</a>
    <a class="close">×</a>
    <a class="play-pause"></a>
    <ol class="indicator"></ol>
    <!-- The modal dialog, which will be used to wrap the lightbox content -->
    <div class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-hidden="true">&times;</button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body next"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default pull-left prev">
                        <i class="glyphicon glyphicon-chevron-left"></i>
                        Previous
                    </button>
                    <button type="button" class="btn btn-primary next">
                        Next
                        <i class="glyphicon glyphicon-chevron-right"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>	
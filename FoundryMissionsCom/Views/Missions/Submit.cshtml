@model FoundryMissionsCom.Models.FoundryMissionViewModels.SubmitMissionViewModel

@{
    ViewBag.Title = "Submit a Foundry Mission";
    int counter = 0;
}

@section opengraph{
        <meta property="og:title" content="Submit a Foundry Mission"/>
        <meta property="og:description" content="Submit your Star Trek Online foundry mission"/>
    }

<div class="content">

    <h2 class="tab-header">Submit a Foundry Mission</h2>

    <ul id="tabs" class="nav nav-tabs manage-account-tabs">
        <li class="active"><a data-toggle="tab" href="#manual">Input Mission</a></li>
        <li><a data-toggle="tab" href="#upload">Upload Export Files</a></li>
    </ul>

    <div class="tab-content content">
        <div id="manual" class="tab-pane active control-panel-pane">
            @using (Html.BeginForm("submit", "missions", FormMethod.Post, new { @class = "mission-data", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-vertical">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CrypticId, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <span class="input-group-addon">ST-</span>
                                    @Html.EditorFor(model => model.CrypticId, new { htmlAttributes = new { @class = "form-control crypticid" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.CrypticId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Faction, htmlAttributes: new { @class = "control-label" })
                                @Html.EnumDropDownListFor(model => model.Faction, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Faction, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.MinimumLevel, htmlAttributes: new { @class = "control-label" })
                                @*Html.EditorFor(model => model.MinimumLevel, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(model => model.MinimumLevel, (SelectList)ViewBag.MinimumLevelSelectList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MinimumLevel, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label" })

                                @Html.EnumDropDownListFor(model => model.Length, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
                            </div>
                            @*
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label" })


                                @Html.DropDownListFor(model => model.Published, (SelectList)ViewBag.PublishedSelectList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Spotlit, htmlAttributes: new { @class = "control-label" })

                                @Html.DropDownListFor(model => model.Spotlit, (SelectList)ViewBag.PublishedSelectList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Spotlit, "", new { @class = "text-danger" })
                            </div>
                            *@
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label" }) (Files must be 2 Mb or smaller)
                            <div id="submit-mission-image-list">
                                <div class="row">
                                    <div class="col-md-12">
                                        <input type="submit" class="delete-image" value="X" /><input type="file" class="submit-mission-image" name="Images[0]" accept="image/*" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <input type="submit" id="add-new-image" value="Add another image" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Videos, htmlAttributes: new { @class = "control-label" }) (Paste youtube link here ie www.youtube.com/watch?v=RIn3VhFcC3E6)
                            <div id="submit-mission-video-list">
                                <div class="row">
                                    <div class="col-md-12">
                                        <input type="submit" class="delete-video" value="X" /><input type="text" class="submit-mission-video" name="Videos[0]" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <input type="submit" id="add-new-video" value="Add another video" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", rows = "5", id = "missiondescription" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Gameplay Tags</h4>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            Selected:
                            <div class="list-group gameplay-tags" id="selected-tags">
                            </div>
                        </div>
                        <div class="col-md-6">
                            Available:
                            <div class="list-group gameplay-tags" id="available-tags">
                                @foreach (var tag in ViewBag.AvailableTags)
                                {
                                    <a href="#" class="list-group-item gameplay-tag" value="@tag">@tag</a>
                                    counter++;
                                }
                            </div>
                        </div>
                    </div>
                    <div class="container row">
                        <div class="form-group">
                            <input type="submit" name="submitButton" value="Save" class="btn btn-default" /> <input type="submit" name="submitButton" value="Save and Publish" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            }
        </div>

        <div id="upload" class="tab-pane control-panel-pane">
            <div>
                <input name="exportFile" type="file" accept=".txt" class="upload-export" id="exportfiles" multiple/>
                <input name="submit" type="submit" value="Upload files" class="btn btn-default" id="submitbutton" />
                <div id="uploadresults"></div>
            </div>
        </div>
    </div>
</div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")           
            @Scripts.Render("~/bundles/submitmission")
        }
